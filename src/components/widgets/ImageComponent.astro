---
/**
 * Image Component
 *
 * This component handles image rendering with multiple source options.
 * It follows this priority order:
 * 1. If `image.imageMetadata` exists, it will be used.
 * 2. Else, if `image.sourceUrl` exists, it will be used.
 * 3. Else, if `defaultImage` exists, it will be used.
 * 4. Otherwise, nothing is rendered.
 *
 * Note: When using `image.sourceUrl` for images in the `public` folder, you
 * should provide `width` and `height`. If not provided, defaults are 64x64.
 *
 * @param {(ImageType|null)} [image] - The primary image source.
 * @param {string} [image.sourceUrl] - URL for remote or public images.
 * @param {number} [image.width] - Width for images in `public/`. Default is 64.
 * @param {number} [image.height] - Height for images in `public/`. Default is 64.
 * @param {ImageMetadata} [image.imageMetadata] - Metadata for local imported images.
 * @param {ImageMetadata} [defaultImage] - Fallback image if primary image is missing.
 * @param {string} [alt='Unnamed image'] - Alt text for the image.
 * @param {string} [class] - CSS classes for the image.
 * @param {Omit<ImgAttributes, 'class' | 'alt'>} [imageProps] - Additional attributes for the image.
 *
 * @example
 * // Remote URL
 * <ImageComponent image={{sourceUrl: 'https://example.com/image.png'}} />
 *
 * @example
 * // Public folder image
 * <ImageComponent image={{sourceUrl: '/image.png', alt: 'alt text', width: 20, height: 20}} />
 *
 * @example
 * // Local image import
 * <ImageComponent image={{imageMetadata: image, alt: 'alt text'}} />
 */

import type { ImageMetadata } from 'astro'
import type { ImgAttributes } from 'astro:assets'
import type { ImageType } from '@/types'

import { Image } from 'astro:assets'

interface Props {
  image?: ImageType
  defaultImage?: ImageMetadata
  alt?: string
  class?: string
  imageProps?: Omit<ImgAttributes, 'class' | 'alt'>
}

const { image, defaultImage, alt, class: className, imageProps } = Astro.props
---

{
  image?.imageMetadata ?
    <Image
      alt={alt || 'Unnamed image'}
      src={image.imageMetadata}
      class={className}
      {...imageProps}
    />
  : image?.sourceUrl && image?.sourceUrl.startsWith('/') ?
    <Image
      alt={alt || 'Unnamed image'}
      src={image.sourceUrl}
      class={className}
      width={image.width || 64}
      height={image.height || 64}
      {...imageProps}
    />
  : image?.sourceUrl ?
    <Image
      alt={alt || 'Unnamed image'}
      src={image.sourceUrl}
      inferSize
      class={className}
      {...imageProps}
    />
  : defaultImage ?
    <Image alt={alt || 'Unnamed image'} src={defaultImage} class={className} {...imageProps} />
  : null
}
