---
/**
 * Header Page Component
 *
 * This component is used in the navigation item page header.
 *
 * @param {('white'|'gray')} [headerType='white'] - The background color type for the header.
 * @param {('wide'|'normal')} [headerWidth] - The width of the header. 'Wide' spans the full
 * width, while 'normal' is standard width.
 * @param {string} title - The main title text to be displayed in the header.
 * @param {string} [subtitle] - An optional subtitle text to be displayed under the title.
 * @param {string} [slotContainerClass] - Optional CSS classes for customizing the slot container.
 * @param {ImageType} [icon] - If icon sourceUrl else imageMetadata
 * @param {string} [iconClass] -  Optional CSS classes for customizing the icon's appearance.
 * @param {number} [number] - An optional number to be displayed next to the title,
 * typically used for ordering or counting.
 */

import type { ImageType } from '@/types'

import SimpleImage from '@components/widgets/SimpleImage.astro'
import Header from './Header.astro'

interface Props {
  headerType?: 'white' | 'gray'
  headerWidth?: 'wide' | 'normal'
  title: string
  subtitle?: string
  slotContainerClass?: string
  icon?: ImageType
  iconClass?: string
  number?: number
}

const { headerType, headerWidth, title, subtitle, slotContainerClass, icon, iconClass, number } =
  Astro.props
---

<Header slotContainerClass={slotContainerClass} headerType={headerType} headerWidth={headerWidth}>
  <div class="w-full py-8">
    <div class="flex flex-col items-center gap-3 md:flex-row">
      {
        !!icon && (
          <div class:list={['h-[45px] w-[45px]', iconClass]}>
            <SimpleImage
              src={icon.sourceUrl || icon.imageMetadata?.src}
              alt={title}
              class="notion-page-cover h-full w-full"
            />
            {/* notion-page-cover not found */}
          </div>
        )
      }
      <h1
        class="flex items-center gap-4 text-center text-2xl font-semibold leading-tight tracking-tight md:text-left md:text-3xl xl:text-4xl"
      >
        <span class="thi-text-rainbow">{title}</span>
        {
          number && (
            <span class="rounded-lg bg-[#565a6b] px-2 py-1 text-[60%] font-medium leading-snug tracking-wide text-white">
              {number}
            </span>
          )
        }
      </h1>
    </div>

    {
      subtitle && (
        <div class="mt-4 text-center text-gray-100 md:mt-0 md:pl-[60px] md:text-left lg:w-4/5">
          {subtitle}
        </div>
      )
    }
  </div>
</Header>
